<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://joeyzyz.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://joeyzyz.github.io/" rel="alternate" type="text/html" /><updated>2022-03-06T18:44:17+08:00</updated><id>https://joeyzyz.github.io/feed.xml</id><title type="html">blog</title><subtitle></subtitle><author><name>joey zhou</name></author><entry><title type="html">链表技巧</title><link href="https://joeyzyz.github.io/2021/12/22/%E9%93%BE%E8%A1%A8/" rel="alternate" type="text/html" title="链表技巧" /><published>2021-12-22T00:00:00+08:00</published><updated>2021-12-22T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/12/22/%E9%93%BE%E8%A1%A8</id><content type="html" xml:base="https://joeyzyz.github.io/2021/12/22/%E9%93%BE%E8%A1%A8/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://oi-wiki.org/graph/graph-matching/bigraph-weight-match/&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;思路&quot;&gt;思路&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;快慢指针&lt;/li&gt;
  &lt;li&gt;前后指针&lt;/li&gt;
  &lt;li&gt;双侧指针&lt;/li&gt;
  &lt;li&gt;指针位置重置&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;leetcode 1947&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>joey zhou</name></author><category term="Todo" /><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 代码</summary></entry><entry><title type="html">二叉树序列化与反序列化</title><link href="https://joeyzyz.github.io/2021/12/19/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/" rel="alternate" type="text/html" title="二叉树序列化与反序列化" /><published>2021-12-19T00:00:00+08:00</published><updated>2021-12-19T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/12/19/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96</id><content type="html" xml:base="https://joeyzyz.github.io/2021/12/19/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/data_structure/BT-serialize.py&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;包括：前序遍历，后续遍历，层级遍历&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/&quot;&gt;leetcode 297&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 代码 包括：前序遍历，后续遍历，层级遍历</summary></entry><entry><title type="html">最近公共祖先</title><link href="https://joeyzyz.github.io/2021/12/19/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/" rel="alternate" type="text/html" title="最近公共祖先" /><published>2021-12-19T00:00:00+08:00</published><updated>2021-12-19T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/12/19/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88</id><content type="html" xml:base="https://joeyzyz.github.io/2021/12/19/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/data_structure/LCA.py&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;包括：二叉树版本和二叉搜索树版本&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/&quot;&gt;leetcode 236&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/&quot;&gt;leetcode 235&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 代码 包括：二叉树版本和二叉搜索树版本</summary></entry><entry><title type="html">二叉搜索树</title><link href="https://joeyzyz.github.io/2021/12/18/BST/" rel="alternate" type="text/html" title="二叉搜索树" /><published>2021-12-18T00:00:00+08:00</published><updated>2021-12-18T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/12/18/BST</id><content type="html" xml:base="https://joeyzyz.github.io/2021/12/18/BST/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/data_structure/BST.py&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;包括：查询、插入、删除、判断合法性&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/search-in-a-binary-search-tree/&quot;&gt;leetcode 700&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/insert-into-a-binary-search-tree/&quot;&gt;leetcode 701&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/delete-node-in-a-bst/&quot;&gt;leetcode 450&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/validate-binary-search-tree/&quot;&gt;leetcode 98&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 代码 包括：查询、插入、删除、判断合法性</summary></entry><entry><title type="html">二分查找</title><link href="https://joeyzyz.github.io/2021/10/11/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/" rel="alternate" type="text/html" title="二分查找" /><published>2021-10-11T00:00:00+08:00</published><updated>2021-10-11T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/10/11/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE</id><content type="html" xml:base="https://joeyzyz.github.io/2021/10/11/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/divide-and-conquer/binary_search.py&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/&quot;&gt;leetcode 34&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 代码</summary></entry><entry><title type="html">滑动窗口</title><link href="https://joeyzyz.github.io/2021/10/04/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/" rel="alternate" type="text/html" title="滑动窗口" /><published>2021-10-04T00:00:00+08:00</published><updated>2021-10-04T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/10/04/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3</id><content type="html" xml:base="https://joeyzyz.github.io/2021/10/04/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/">&lt;h2 id=&quot;解题思路&quot;&gt;解题思路&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;以右指针作为驱动，拖着左指针向前走。右指针每次只移动一步，而左指针在内部 while 循环中每次可能移动多步&lt;/li&gt;
  &lt;li&gt;右指针是主动前移，探索未知的新区域；左指针是被迫移动，负责寻找满足题意的区间&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/traverse/sliding_window.py&quot;&gt; 代码 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/max-consecutive-ones-iii/&quot;&gt;leetcode 1004&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/maximize-the-confusion-of-an-exam/&quot;&gt;leetcode 2024&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">解题思路 以右指针作为驱动，拖着左指针向前走。右指针每次只移动一步，而左指针在内部 while 循环中每次可能移动多步 右指针是主动前移，探索未知的新区域；左指针是被迫移动，负责寻找满足题意的区间</summary></entry><entry><title type="html">Hive 开窗函数</title><link href="https://joeyzyz.github.io/2021/09/05/Hive-%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/" rel="alternate" type="text/html" title="Hive 开窗函数" /><published>2021-09-05T00:00:00+08:00</published><updated>2021-09-05T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/09/05/Hive%20%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0</id><content type="html" xml:base="https://joeyzyz.github.io/2021/09/05/Hive-%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/">&lt;h2 id=&quot;分类&quot;&gt;分类&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;FIRST_VALUE(col), LAST_VALUE(col) 可以返回窗口帧中第一条或最后一条记录的指定字段值；&lt;/li&gt;
  &lt;li&gt;LEAD(col, n), LAG(col, n) 返回当前记录的往下数第 n 条或往上数第 n 条记录的字段值；&lt;/li&gt;
  &lt;li&gt;RANK(), ROW_NUMBER() 会为帧内的每一行返回一个序数，区别在于存在字段值相等的记录时，RANK() 会返回相同的序数；&lt;/li&gt;
  &lt;li&gt;COUNT(), SUM(col), MIN(col) 和一般的聚合操作相同。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://shzhangji.com/cnblogs/2017/09/05/hive-window-and-analytical-functions/&quot;&gt;Hive 窗口与分析型函数&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="Hive" /><category term="Big Data" /><summary type="html">分类 FIRST_VALUE(col), LAST_VALUE(col) 可以返回窗口帧中第一条或最后一条记录的指定字段值； LEAD(col, n), LAG(col, n) 返回当前记录的往下数第 n 条或往上数第 n 条记录的字段值； RANK(), ROW_NUMBER() 会为帧内的每一行返回一个序数，区别在于存在字段值相等的记录时，RANK() 会返回相同的序数； COUNT(), SUM(col), MIN(col) 和一般的聚合操作相同。</summary></entry><entry><title type="html">spark 数据倾斜及解决</title><link href="https://joeyzyz.github.io/2021/09/05/spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/" rel="alternate" type="text/html" title="spark 数据倾斜及解决" /><published>2021-09-05T00:00:00+08:00</published><updated>2021-09-05T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/09/05/spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C</id><content type="html" xml:base="https://joeyzyz.github.io/2021/09/05/spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/">&lt;h2 id=&quot;问题表现&quot;&gt;问题表现&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;总共有1000个task，997个task都在1分钟之内执行完了，但是剩余两三个task却要一两个小时&lt;/li&gt;
  &lt;li&gt;原本能够正常执行的Spark作业，某天突然报出OOM（内存溢出）异常&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;问题原因&quot;&gt;问题原因&lt;/h2&gt;
&lt;p&gt;在进行shuffle的时候，必须将各个节点上相同的key拉取到某个节点上的一个task来进行处理，比如按照key进行聚合或join等操作。此时如果某个key对应的数据量特别大的话，就会发生数据倾斜。比如大部分key对应10条数据，但是个别key却对应了100万条数据，那么大部分task可能就只会分配到10条数据，然后1秒钟就运行完了；但是个别task可能分配到了100万数据，要运行一两个小时。因此，整个Spark作业的运行进度是由运行时间最长的那个task决定的。&lt;/p&gt;

&lt;h2 id=&quot;解决方法&quot;&gt;解决方法&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;适用场景&lt;/th&gt;
      &lt;th&gt;实现原理&lt;/th&gt;
      &lt;th&gt;方案优点&lt;/th&gt;
      &lt;th&gt;方案缺点&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;导致倾斜的key就少数几个&lt;/td&gt;
      &lt;td&gt;取数据量最多的key过滤掉即可&lt;/td&gt;
      &lt;td&gt;实现简单&lt;/td&gt;
      &lt;td&gt;适用场景不多&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;默认并行度较小（200）&lt;/td&gt;
      &lt;td&gt;提高shuffle操作的并行度,让每个task处理比原来更少的数据&lt;/td&gt;
      &lt;td&gt;实现简单&lt;/td&gt;
      &lt;td&gt;只是缓解&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;reduceByKey 和 groupByKey 操作&lt;/td&gt;
      &lt;td&gt;1. 先局部聚合：&lt;br /&gt; 给每个key都打上一个随机数, 再进行聚合操作 &lt;br /&gt; 2. 后全局聚合：&lt;br /&gt; 将各个key的前缀给去掉，再进行一次聚合操作&lt;/td&gt;
      &lt;td&gt;对于聚合类的shuffle操作导致的数据倾斜，效果是非常不错的&lt;/td&gt;
      &lt;td&gt;不适用与 join类的shuffle操作&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1. join 操作 &lt;br /&gt; 2. 其中一个表数据量较小&lt;/td&gt;
      &lt;td&gt;不使用join算子进行连接操作，而使用Broadcast变量与map类算子实现join操作&lt;/td&gt;
      &lt;td&gt;对join操作导致的数据倾斜，效果非常好&lt;/td&gt;
      &lt;td&gt;只适用于一个大表和一个小表的情况, 并不适合两个都是大表的情况&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1. join 操作 &lt;br /&gt; 2. 某几个key导致了倾斜&lt;/td&gt;
      &lt;td&gt;将少数几个key分拆成独立RDD，并附加随机前缀打散成n份去进行join 另一份数据（这份数据要先膨胀成n条数据）&lt;/td&gt;
      &lt;td&gt;在适用场景下效果较好&lt;/td&gt;
      &lt;td&gt;不适用于导致倾斜的key特别多的情况&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1. join 操作 &lt;br /&gt; 2. 大量key导致了倾斜&lt;/td&gt;
      &lt;td&gt;将所有key附加随机前缀打散成n份去进行join 另一份数据（这份数据要先膨胀成n条数据）&lt;/td&gt;
      &lt;td&gt;对join类型的数据倾斜基本都可以处理&lt;/td&gt;
      &lt;td&gt;需要对整个RDD进行扩容，对内存资源要求很高&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.meituan.com/2016/05/12/spark-tuning-pro.html&quot;&gt;美团Spark性能优化指南&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="Spark" /><category term="Big Data" /><summary type="html">问题表现 总共有1000个task，997个task都在1分钟之内执行完了，但是剩余两三个task却要一两个小时 原本能够正常执行的Spark作业，某天突然报出OOM（内存溢出）异常</summary></entry><entry><title type="html">01背包 &amp;amp; 完全背包</title><link href="https://joeyzyz.github.io/2021/08/29/01%E8%83%8C%E5%8C%85/" rel="alternate" type="text/html" title="01背包 &amp;amp; 完全背包" /><published>2021-08-29T00:00:00+08:00</published><updated>2021-08-29T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/08/29/01%E8%83%8C%E5%8C%85</id><content type="html" xml:base="https://joeyzyz.github.io/2021/08/29/01%E8%83%8C%E5%8C%85/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/dp/0-1-backpack.py&quot;&gt; 01背包代码 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joeyzyz/leetcode-template/blob/main/dp/0-inf-backpack.py&quot;&gt; 完全背包代码 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;典型题目&quot;&gt;典型题目&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;01 背包
&lt;a href=&quot;https://leetcode-cn.com/problems/minimize-the-difference-between-target-and-chosen-elements/&quot;&gt;leetcode 1981&lt;/a&gt;
&lt;a href=&quot;https://leetcode-cn.com/problems/partition-equal-subset-sum/&quot;&gt;leetcode 416&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;完全背包
&lt;a href=&quot;https://leetcode-cn.com/problems/coin-change/&quot;&gt;leetcode 322&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/tianyicui/pack/master/V2.pdf&quot;&gt; 背包九讲 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://edwardzcn.github.io/post/1590e320.html&quot;&gt; 01背包的常数优化 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>joey zhou</name></author><category term="leetcode" /><category term="Algorithm" /><summary type="html">模板 01背包代码 完全背包代码</summary></entry><entry><title type="html">多任务学习在推荐系统中应用</title><link href="https://joeyzyz.github.io/2021/08/29/%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E5%9C%A8%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%BA%94%E7%94%A8/" rel="alternate" type="text/html" title="多任务学习在推荐系统中应用" /><published>2021-08-29T00:00:00+08:00</published><updated>2021-08-29T00:00:00+08:00</updated><id>https://joeyzyz.github.io/2021/08/29/%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E5%9C%A8%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%BA%94%E7%94%A8</id><content type="html" xml:base="https://joeyzyz.github.io/2021/08/29/%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E5%9C%A8%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%BA%94%E7%94%A8/">&lt;h2 id=&quot;模板&quot;&gt;模板&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55752344&quot;&gt;MMoE&lt;/a&gt;&lt;/p&gt;</content><author><name>joey zhou</name></author><category term="Todo" /><category term="LTR" /><category term="Recommendation" /><summary type="html">模板 代码</summary></entry></feed>